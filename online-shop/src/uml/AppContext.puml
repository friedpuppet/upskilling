@startuml
'https://plantuml.com/class-diagram

interface ApplicationContext {
+ Object getBean(String name)
+ Object getBean(Class clazz)
}

class ClassPathApplicationContext implements ApplicationContext {
- File configFile
- Map<String, Bean> beans

+ void ClassPathApplicationContext(String path)
+ Object getBean(String name)
+ Object getBean(Class clazz)
}

ClassPathApplicationContext *-- Bean
ClassPathApplicationContext --> ConfigLoader
ClassPathApplicationContext --> BeanCreator

class ConfigLoader {
- Map<String, BeanConfig> beanConfigs;
- Map<String, BeanConfig> readConfig(String path) {static}
+ BeanConfig getBeanConfig(String beanName)
}

ConfigLoader *-- BeanConfig

class BeanConfig {
- String beanName
- String className
- Map<String, String> properties
- Map<String, String> dependencies
}

class BeanCreator {
+ Bean createBean(BeanConfig) {static}
+ void fillProperties(BeanConfig, Bean) {static}
+ void injectDependencies(BeanConfig, Bean) {static}
+ Object instantiate(String beanName) {static}
}


class Bean {
- String beanName
- String className
- Object instance
}


@enduml